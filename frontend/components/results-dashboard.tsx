"use client"

import type React from "react"

import { motion } from "framer-motion"
import { useState } from "react"
import { TrendingUp, Shield, DollarSign, Target, Download, ArrowRight, RotateCcw } from "lucide-react"
import { Button } from "@/components/ui/button"
import { StartupCard } from "@/components/startup-card"
import { RiskHeatmap } from "@/components/risk-heatmap"

const mockStartups = [
  {
    id: 1,
    name: "NeuralFlow AI",
    logo: "🧠",
    tagline: "Next-gen AI infrastructure for enterprise workflows",
    fitScore: 94,
    sector: "AI Infrastructure",
    stage: "Series A",
    metrics: {
      successRate: 87,
      marketFit: 92,
      techCredibility: 89,
      competition: 45,
    },
  },
  {
    id: 2,
    name: "QuantumSecure",
    logo: "🔐",
    tagline: "Post-quantum cryptography for financial institutions",
    fitScore: 91,
    sector: "Cybersecurity",
    stage: "Seed",
    metrics: {
      successRate: 84,
      marketFit: 88,
      techCredibility: 95,
      competition: 38,
    },
  },
  {
    id: 3,
    name: "BioSynth Labs",
    logo: "🧬",
    tagline: "Synthetic biology platform for drug discovery",
    fitScore: 88,
    sector: "BioTech",
    stage: "Series A",
    metrics: {
      successRate: 81,
      marketFit: 85,
      techCredibility: 91,
      competition: 52,
    },
  },
  {
    id: 4,
    name: "ClimateOS",
    logo: "🌍",
    tagline: "Carbon accounting and ESG compliance automation",
    fitScore: 86,
    sector: "ClimaTech",
    stage: "Seed",
    metrics: {
      successRate: 79,
      marketFit: 83,
      techCredibility: 86,
      competition: 48,
    },
  },
  {
    id: 5,
    name: "EdgeCompute",
    logo: "⚡",
    tagline: "Distributed edge computing for IoT applications",
    fitScore: 85,
    sector: "Infrastructure",
    stage: "Series A",
    metrics: {
      successRate: 78,
      marketFit: 81,
      techCredibility: 88,
      competition: 55,
    },
  },
]

interface ResultsDashboardProps {
  onReset: () => void
}

export function ResultsDashboard({ onReset }: ResultsDashboardProps) {
  const [selectedStartup, setSelectedStartup] = useState<number | null>(null)

  const avgSuccessRate = Math.round(
    mockStartups.reduce((acc, s) => acc + s.metrics.successRate, 0) / mockStartups.length,
  )
  const avgMarketFit = Math.round(mockStartups.reduce((acc, s) => acc + s.metrics.marketFit, 0) / mockStartups.length)
  const avgTechCredibility = Math.round(
    mockStartups.reduce((acc, s) => acc + s.metrics.techCredibility, 0) / mockStartups.length,
  )
  const avgCompetition = Math.round(
    mockStartups.reduce((acc, s) => acc + s.metrics.competition, 0) / mockStartups.length,
  )

  const downloadIndividualReport = (startup: (typeof mockStartups)[0]) => {
    const content = `
      INVESTMENT REPORT
      
      Company: ${startup.name}
      Tagline: ${startup.tagline}
      Sector: ${startup.sector}
      Stage: ${startup.stage}
      Fit Score: ${startup.fitScore}/100
      
      METRICS:
      Success Rate: ${startup.metrics.successRate}/100
      Market Fit: ${startup.metrics.marketFit}/100
      Tech Credibility: ${startup.metrics.techCredibility}/100
      Competition Level: ${startup.metrics.competition}/100
      
      Generated by InvestAI
    `
    const blob = new Blob([content], { type: "text/plain" })
    const url = URL.createObjectURL(blob)
    const a = document.createElement("a")
    a.href = url
    a.download = `${startup.name.replace(/\s+/g, "-")}-Report.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  const downloadCompleteReport = () => {
    let content = `COMPLETE INVESTMENT ANALYSIS REPORT\n\n`
    content += `PORTFOLIO OVERVIEW\n`
    content += `Average Success Rate: ${avgSuccessRate}/100\n`
    content += `Average Market Fit: ${avgMarketFit}/100\n`
    content += `Average Tech Credibility: ${avgTechCredibility}/100\n`
    content += `Average Competition: ${avgCompetition}/100\n\n`
    content += `TOP 5 INVESTMENT OPPORTUNITIES\n\n`

    mockStartups.forEach((startup, idx) => {
      content += `\n${idx + 1}. ${startup.name}\n`
      content += `   Tagline: ${startup.tagline}\n`
      content += `   Sector: ${startup.sector} | Stage: ${startup.stage}\n`
      content += `   Fit Score: ${startup.fitScore}/100\n`
      content += `   Success Rate: ${startup.metrics.successRate}/100\n`
      content += `   Market Fit: ${startup.metrics.marketFit}/100\n`
      content += `   Tech Credibility: ${startup.metrics.techCredibility}/100\n`
      content += `   Competition: ${startup.metrics.competition}/100\n`
    })

    content += `\n\nGenerated by InvestAI`

    const blob = new Blob([content], { type: "text/plain" })
    const url = URL.createObjectURL(blob)
    const a = document.createElement("a")
    a.href = url
    a.download = "Complete-Investment-Report.txt"
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  return (
    <div className="min-h-screen relative overflow-hidden bg-background">
      <div className="absolute inset-0 overflow-hidden pointer-events-none">
        <motion.div
          className="absolute top-20 right-10 w-[500px] h-[500px] bg-[#00D1FF]/5 rounded-full blur-3xl"
          animate={{
            scale: [1, 1.2, 1],
            opacity: [0.3, 0.5, 0.3],
          }}
          transition={{
            duration: 8,
            repeat: Number.POSITIVE_INFINITY,
            ease: "easeInOut",
          }}
        />
        <motion.div
          className="absolute bottom-20 left-10 w-[400px] h-[400px] bg-[#0066FF]/5 rounded-full blur-3xl"
          animate={{
            scale: [1.2, 1, 1.2],
            opacity: [0.2, 0.4, 0.2],
          }}
          transition={{
            duration: 10,
            repeat: Number.POSITIVE_INFINITY,
            ease: "easeInOut",
          }}
        />
      </div>

      <div className="relative z-10 container mx-auto px-4 sm:px-6 py-8 sm:py-16 max-w-7xl">
        <motion.div
          initial={{ opacity: 0, y: -20 }}
          animate={{ opacity: 1, y: 0 }}
          className="flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4 mb-8 sm:mb-16"
        >
          <div>
            <h1 className="text-3xl sm:text-4xl lg:text-5xl font-bold mb-2 sm:mb-3 text-foreground">
              Investment Radar
            </h1>
            <p className="text-foreground/60 text-base sm:text-lg">5 Startups Aligned with Your Thesis</p>
          </div>
          <Button
            onClick={onReset}
            variant="outline"
            size="sm"
            className="gap-2 bg-transparent border-foreground/20 hover:border-[#00D1FF] hover:text-[#00D1FF] transition-all hover-glow"
          >
            <RotateCcw className="w-4 h-4" />
            <span className="hidden sm:inline">New Analysis</span>
          </Button>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.1 }}
          className="grid grid-cols-2 lg:grid-cols-4 gap-3 sm:gap-6 mb-8 sm:mb-16"
        >
          <StatCard
            icon={<TrendingUp className="w-4 h-4 sm:w-5 sm:h-5" />}
            label="Avg Success Rate"
            value={avgSuccessRate}
          />
          <StatCard icon={<Target className="w-4 h-4 sm:w-5 sm:h-5" />} label="Market Fit" value={avgMarketFit} />
          <StatCard
            icon={<Shield className="w-4 h-4 sm:w-5 sm:h-5" />}
            label="Tech Credibility"
            value={avgTechCredibility}
          />
          <StatCard
            icon={<DollarSign className="w-4 h-4 sm:w-5 sm:h-5" />}
            label="Competition"
            value={avgCompetition}
            inverse
          />
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.2 }}
          className="mb-8 sm:mb-16"
        >
          <h2 className="text-2xl sm:text-3xl font-semibold mb-4 sm:mb-8 text-foreground">
            Top Investment Opportunities
          </h2>
          <div className="space-y-4 sm:space-y-6">
            {mockStartups.map((startup, idx) => (
              <motion.div
                key={startup.id}
                initial={{ opacity: 0, x: -20 }}
                animate={{ opacity: 1, x: 0 }}
                transition={{ delay: 0.3 + idx * 0.1 }}
              >
                <StartupCard
                  startup={startup}
                  isSelected={selectedStartup === startup.id}
                  onSelect={() => setSelectedStartup(selectedStartup === startup.id ? null : startup.id)}
                  onDownload={() => downloadIndividualReport(startup)}
                />
              </motion.div>
            ))}
          </div>
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.8 }}
          className="mb-8 sm:mb-16"
        >
          <h2 className="text-2xl sm:text-3xl font-semibold mb-4 sm:mb-8 text-foreground">
            Risk Analysis & Predictions
          </h2>
          <RiskHeatmap />
        </motion.div>

        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 1 }}
          className="glass rounded-2xl sm:rounded-3xl p-6 sm:p-10 text-center hover-glow transition-all"
        >
          <h2 className="text-2xl sm:text-3xl font-bold mb-2 sm:mb-3 text-foreground">
            Your Investment Decision Pack Is Ready
          </h2>
          <p className="text-foreground/60 text-sm sm:text-base mb-6 sm:mb-8 max-w-2xl mx-auto">
            Analysis complete. Based on 1000+ pitch decks, 5 startups truly fit your investment thesis.
          </p>
          <Button
            onClick={downloadCompleteReport}
            size="lg"
            className="w-full sm:w-auto bg-gradient-blue hover:opacity-90 text-white px-6 sm:px-8 py-4 sm:py-6 text-base sm:text-lg group hover-glow"
          >
            <Download className="mr-2 w-4 h-4 sm:w-5 sm:h-5" />
            Download Complete Report
            <ArrowRight className="ml-2 w-4 h-4 sm:w-5 sm:h-5 group-hover:translate-x-1 transition-transform" />
          </Button>
        </motion.div>
      </div>
    </div>
  )
}

function StatCard({
  icon,
  label,
  value,
  inverse = false,
}: {
  icon: React.ReactNode
  label: string
  value: number
  inverse?: boolean
}) {
  return (
    <div className="glass rounded-xl sm:rounded-2xl p-3 sm:p-5 hover-glow transition-all group">
      <div className="flex items-center gap-2 sm:gap-3 mb-2 sm:mb-4">
        <div className="w-8 h-8 sm:w-10 sm:h-10 rounded-lg sm:rounded-xl bg-gradient-blue flex items-center justify-center text-white group-hover:scale-110 transition-transform">
          {icon}
        </div>
        <p className="text-xs sm:text-sm text-foreground/60">{label}</p>
      </div>
      <div className="flex items-baseline gap-1 sm:gap-2 mb-2 sm:mb-3">
        <p className="text-2xl sm:text-3xl font-bold text-foreground">{value}</p>
        <p className="text-foreground/40 text-xs sm:text-sm">/100</p>
      </div>
      <div className="h-1 sm:h-1.5 bg-foreground/5 rounded-full overflow-hidden">
        <motion.div
          className="h-full bg-gradient-blue"
          initial={{ width: 0 }}
          animate={{ width: `${value}%` }}
          transition={{ duration: 1, delay: 0.5 }}
        />
      </div>
    </div>
  )
}
